% Encoding: UTF-8

@InProceedings{bohme2017directed,
  author     = {B{\"o}hme, Marcel and Pham, Van-Thuan and Nguyen, Manh-Dung and Roychoudhury, Abhik},
  booktitle  = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
  title      = {Directed Greybox Fuzzing},
  year       = {2017},
  pages      = {2329--2344},
  doi        = {10.1145/3133956.3134020},
  file       = {:C\:/Users/ys-zh/iCloudDrive/Papers/IS/fuzz/Directed Greybox Fuzzing.pdf:PDF},
  groups     = {Fuzzing},
  readstatus = {read},
}

@Article{8233151,
  author     = {Böhme, Marcel and Pham, Van-Thuan and Roychoudhury, Abhik},
  journal    = {IEEE Transactions on Software Engineering},
  title      = {Coverage-Based Greybox Fuzzing as Markov Chain},
  year       = {2019},
  issn       = {0098-5589},
  number     = {5},
  pages      = {489-506},
  volume     = {45},
  doi        = {10.1109/TSE.2017.2785841},
  file       = {:C\:/Users/ys-zh/iCloudDrive/Papers/IS/fuzz/Coverage-Based_Greybox_Fuzzing_as_Markov_Chain.pdf:PDF},
  groups     = {Fuzzing},
  readstatus = {read},
}

@InProceedings{10.1145/3318464.3389745,
  author    = {Fan, Wenfei and Jin, Ruochun and Liu, Muyang and Lu, Ping and Luo, Xiaojian and Xu, Ruiqi and Yin, Qiang and Yu, Wenyuan and Zhou, Jingren},
  booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
  title     = {Application Driven Graph Partitioning},
  year      = {2020},
  address   = {New York, NY, USA},
  pages     = {1765–1779},
  publisher = {Association for Computing Machinery},
  series    = {SIGMOD '20},
  abstract  = {Graph partitioning is crucial to parallel computations on large graphs. The choice
of partitioning strategies has strong impact on not only the performance of graph
algorithms, but also the design of the algorithms. For an algorithm of our interest,
what partitioning strategy fits it the best and improves its parallel execution? Is
it possible to develop graph algorithms with partition transparency, such that the
algorithms work under different partitions without changes? This paper aims to answer
these questions. We propose an application-driven hybrid partitioning strategy that,
given a graph algorithm A, learns a cost model for A as polynomial regression. We
develop partitioners that given the learned cost model, refine an edge-cut or vertex-cut
partition to a hybrid partition and reduce the parallel cost of A. Moreover, we identify
a general condition under which graph-centric algorithms are partition transparent.
We show that a number of graph algorithms can be made partition transparent. Using
real-life and synthetic graphs, we experimentally verify that our partitioning strategy
improves the performance of a variety of graph computations, up to 22.5 times.},
  doi       = {10.1145/3318464.3389745},
  file      = {paper:C\:/Users/ys-zh/iCloudDrive/Papers/GraphTheory/Application Driven Graph Partitioning.pdf:PDF},
  groups    = {Graph Theory},
  isbn      = {9781450367356},
  keywords  = {partition transparency, machine learning, graph partition},
  location  = {Portland, OR, USA},
  numpages  = {15},
  priority  = {prio3},
  url       = {https://doi.org/10.1145/3318464.3389745},
}

@InProceedings{10.1145/3377811.3380421,
  author    = {Man\`{e}s, Valentin J. M. and Kim, Soomin and Cha, Sang Kil},
  booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering},
  title     = {Ankou: Guiding Grey-Box Fuzzing towards Combinatorial Difference},
  year      = {2020},
  address   = {New York, NY, USA},
  pages     = {1024–1036},
  publisher = {Association for Computing Machinery},
  series    = {ICSE '20},
  abstract  = {Grey-box fuzzing is an evolutionary process, which maintains and evolves a population
of test cases with the help of a fitness function. Fitness functions used by current
grey-box fuzzers are not informative in that they cannot distinguish different program
executions as long as those executions achieve the same coverage. The problem is that
current fitness functions only consider a union of data, but not their combination.
As such, fuzzers often get stuck in a local optimum during their search. In this paper,
we introduce Ankou, the first grey-box fuzzer that recognizes different combinations
of execution information, and present several scalability challenges encountered while
designing and implementing Ankou. Our experimental results show that Ankou is 1.94\texttimes{}
and 8.0\texttimes{} more effective in finding bugs than AFL and Angora, respectively.},
  doi       = {10.1145/3377811.3380421},
  groups    = {Fuzzing},
  isbn      = {9781450371216},
  keywords  = {guided fuzzing, principal component analysis, fuzz testing, software testing, grey-box fuzzing},
  location  = {Seoul, South Korea},
  numpages  = {13},
  url       = {https://doi.org/10.1145/3377811.3380421},
}

@InProceedings{10.1145/2001576.2001642,
  author    = {Kim, Jin and Hwang, Inwook and Kim, Yong-Hyuk and Moon, Byung-Ro},
  booktitle = {Proceedings of the 13th Annual Conference on Genetic and Evolutionary Computation},
  title     = {Genetic Approaches for Graph Partitioning: A Survey},
  year      = {2011},
  address   = {New York, NY, USA},
  pages     = {473–480},
  publisher = {Association for Computing Machinery},
  series    = {GECCO '11},
  abstract  = {The graph partitioning problem occurs in numerous applications such as circuit placement,
matrix factorization, load balancing, and community detection. For this problem, genetic
algorithm is a representative approach with competitive performance with many related
papers being published. Although there are a number of surveys on graph partitioning,
none of them deals with genetic algorithms in much detail. In this survey, a number
of problem-specific issues in applying genetic algorithms to the graph partitioning
problem are discussed; the issues include encoding, crossover, normalization, and
balancing.},
  doi       = {10.1145/2001576.2001642},
  file      = {paper:C\:/Users/ys-zh/iCloudDrive/Papers/GraphTheory/Genetic Approaches for Graph Partitioning--A Survey.pdf:PDF},
  groups    = {Graph Theory},
  isbn      = {9781450305570},
  keywords  = {genetic algorithm, survey, combinatorial optimization, graph partitioning, graph bisection},
  location  = {Dublin, Ireland},
  numpages  = {8},
  url       = {https://doi.org/10.1145/2001576.2001642},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: grouping:
0 AllEntriesGroup:;
1 StaticGroup:Fuzzing\;0\;0\;0x4d8080ff\;bug\;\;;
1 StaticGroup:Graph Theory\;0\;0\;0x008000ff\;graph\;\;;
}
